// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ReportManagement.Infrastructure.Data;

#nullable disable

namespace ReportManagement.Infrastructure.Data.Migrations
{
    [DbContext(typeof(ReportManagementDbContext))]
    [Migration("20250806211643_AddReportAndReportDataConfigurations")]
    partial class AddReportAndReportDataConfigurations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ReportManagement.Infrastructure.Data.Entities.ReportDataEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int>("ContactCount")
                        .HasColumnType("integer")
                        .HasColumnName("contact_count");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("location");

                    b.Property<int>("PhoneNumberCount")
                        .HasColumnType("integer")
                        .HasColumnName("phone_number_count");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uuid")
                        .HasColumnName("report_id");

                    b.HasKey("Id")
                        .HasName("pk_report_data");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_report_data_id");

                    b.HasIndex("ReportId", "Id")
                        .IsUnique()
                        .HasDatabaseName("ix_report_data_report_id_id");

                    b.ToTable("report_data", (string)null);
                });

            modelBuilder.Entity("ReportManagement.Infrastructure.Data.Entities.ReportEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTimeOffset>("RequestDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("request_date");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("pk_reports");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_reports_id");

                    b.ToTable("reports", (string)null);
                });

            modelBuilder.Entity("ReportManagement.Infrastructure.Data.Entities.ReportDataEntity", b =>
                {
                    b.HasOne("ReportManagement.Infrastructure.Data.Entities.ReportEntity", "Report")
                        .WithMany("ReportData")
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_report_data_reports_report_id");

                    b.Navigation("Report");
                });

            modelBuilder.Entity("ReportManagement.Infrastructure.Data.Entities.ReportEntity", b =>
                {
                    b.Navigation("ReportData");
                });
#pragma warning restore 612, 618
        }
    }
}
